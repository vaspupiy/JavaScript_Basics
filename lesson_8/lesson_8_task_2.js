'use strict'
// if (!("a" in window)) {
//     var a = 1;
// }
// alert(a); // Будет объявленна переменная "a" до проверки ("a" in window),-> !("a" in window) === false, и значение не будет присвоено. вывод: undefined


// var b = function a(x) {
//     return x && a(--x);
// };
// alert(a); //поднимаются только переменные объявленные через var и Function Declaration, Function Expression создается в процессе выполнения кода, -  a is not defined

// function a(x) {
//     return x * 2;
// }
// var a;
// alert(a); // функции, объявленные как Function Declaration, создаются интерпретатором до выполнения кода. Почему var a ни чего не сломала, не знаю... выведет текстовое представление ф-ии

// function b(x, y, a) {
//     arguments[2] = 10;
//     alert(a);
// }
// b(1, 2, 3); //в строгом режиме нельзя выполнять операции присваивания значений таким сущностям, предназначенным только для чтения, как arguments, NaN или eval. в строгом 3 в неситрогом 10

// function a() {
//     alert(this);
// }
// a.call(null); //В строгом режиме ключевое слово this не обязано всегда быть объектом... В строгом выведет - null.
// в нестрогом режиме, если контекст this меняется на что-то, не являющееся объектом, его место занимает глобальный объект. Например — window. ... в нестрогом режиме -  window
